name: Deploy to Serve

on:
  # 在针对 `main` 分支的推送上运行。如果你
  # 使用 `master` 分支作为默认分支，请将其更改为 `master`
  push:
    branches: [release]
    tags:
      - 'v*'  # 只在以 'v' 开头的标签时触发，可以根据需要更改

  # 允许你从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限，以允许部署到 GitHub Pages
permissions:
  contents: write

# 只允许同时进行一次部署，跳过正在运行和最新队列之间的运行队列
# 但是，不要取消正在进行的运行，因为我们希望允许这些生产部署完成
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # 构建工作
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 如果未启用 lastUpdated，则不需要
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn # 或 pnpm / yarn
      # - uses: pnpm/action-setup@v3 # 如果使用
      # - uses: oven-sh/setup-bun@v1 # 如果使用 Bun，请取消注释

      # node modules cache.. 
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
        
      - name: Install dependencies
        run: yarn install # 或 pnpm install / yarn install / bun install
        
      - name: Build
        run: yarn build # 或 pnpm docs:build / yarn docs:build / bun run docs:build
      
      - name: Create dist archive
        run: |
          tar -czvf dist.tar.gz ./dist  # 将 dist 目录压缩为 dist.tar.gz
          
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist.tar.gz

      - name: Send Curl Request
        run: |
          TAG_NAME=$(git describe --tags --abbrev=0)
          REPO_NAME="${{ github.repository }}" 
          curl -X POST -H "Content-Type: application/json" -d '{"repo": "'"${REPO_NAME}"'","tag": "'"${TAG_NAME}"'"}'  https://ci.smartkf.top/release